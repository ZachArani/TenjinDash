    using System.Collections;
    using System.Collections.Generic;
    using UnityEngine;
    using UnityEditor;
    using System.Linq;
    using System;
     
    public class ForceTPose
    {
     
        // This method fixes an avatar which is stuck in a bicycle pose.
        // It alters only those bones that are in a typical humanoid armature, so ears and tail will be unaffected.
        // For most bones, only the rotation will be reverted to the T-pose, but for the hips, the position needs to be reset as well.
     
        [MenuItem("Tools/Enforce T-Pose")]
        static void TPose()
        {
            GameObject selected = Selection.activeGameObject;
     
            if (!selected) return; // If no object was selected, exit.
            if (!selected.TryGetComponent<Animator>(out Animator animator)) return; // If the selected object has no animator, exit.
            if (!animator.avatar) return;
     
            SkeletonBone[] skeletonbones = animator.avatar?.humanDescription.skeleton; // Get the list of bones in the armature.
     
            foreach (SkeletonBone sb in skeletonbones) // Loop through all bones in the armature.
            {
              foreach (HumanBodyBones hbb in Enum.GetValues(typeof(HumanBodyBones)))
              {
                if (hbb != HumanBodyBones.LastBone)
                {
     
                  Transform bone = animator.GetBoneTransform(hbb);
                  if (bone != null) {
     
                    if (sb.name == bone.name) // If this bone is a normal humanoid bone (as opposed to an ear or tail bone), reset its transform.
                    {
     
                      // The bicycle pose happens when for some reason the transforms of an avatar's bones are incorectly saved in a state that is not the t-pose.
                      // For most of the bones this affects only their rotation, but for the hips, the position is affected as well.
                      // As the scale should be untouched, and the user may have altered these intentionally, we should leave them alone.
     
                      if (hbb == HumanBodyBones.Hips) bone.localPosition = sb.position;
                      bone.localRotation = sb.rotation;
                      //bone.localScale = sb.scale;
     
                      // An alternative to setting the values above would be to revert each bone to its prefab state like so:
                      // RevertObjectOverride(boneT.gameObject, InteractionMode.UserAction); // InteractionMode.UserAction should save the changes to the undo history.
     
                      // Though this may only work if the object actually is a prefab, and it would overwrite any user changes to scale or position, and who knows what else.
     
                      break; // We found a humanbodybone that matches, so we need not check the rest against this skeleton bone.
     
                    }
     
                  }    
                }
              }
     
            }
     
        }
     
    }
